---

################################################################
# Network Interface (control plane)
################################################################

# The network interface to use on the target machines, for all control
# and data plane activity.  Yes, currently there is support only for
# using a single network interface for all purposes.

network_interface: eth1

################################################################
# Certificates
################################################################

# The location of the persistent files of an environment on the
#  installer machine(s).  This variable must not be changed.  It is
#  not really a variable.

cert_dir: "~/.openradiant/envs/{{env_name}}"

ca_cert: ca.pem
ca_key: ca-key.pem
ca_srl: ca.srl

################################################################
# VIP
################################################################

# A Virtual IP (VIP) address is normally used by clients of various
# master components when connecting to that component, so that the
# binding of this address to machine can vary over time as part of the
# HA solution.

# A boolean controlling whether the VIP is dynamically bound to a
# machine.  This must be set to True if the size of the Mesos master
# group is greater than one.  We use
# https://www.pureftpd.org/project/ucarp for the dynamic binding.

ha_deploy: True

# The following variables are details of how the VIP is used.  There
# is no reason for the operator to change any of them.

vip_k8s_apiserver_ip: "{{master_vip}}"
vip_k8s_apiserver_port: 443

vip_k8s_rabac_ip: "{{master_vip}}"
vip_k8s_rabac_port: 444

vip_k8s_scheduler_ip: "{{master_vip}}"
vip_k8s_scheduler_port: 81

vip_mesos_master_ip: "{{master_vip}}"

vip_swarm_master_ip: "{{master_vip}}"
vip_swarm_master_port: 2375


###############################################################
# HAproxy
###############################################################

# HAProxy is always between master component clients and servers.  The
# following variables control details of its configuration.  There is
# no reason for the operator to change any of them.

haproxy_image: haproxy:1.5
haproxy_stats_port: 9000
traffic_type: tcp
lb_k8s: true
lb_k8s_secure: false
lb_swarm: true
lb_mesos: false

################################################################
# Kubernetes
################################################################

# A boolean controlling whether Kubernetes is deployed in any way at
# all.

kubernetes_deploy: True

# A secondary boolean controlling whether kube-proxy will be used.
# The networking plugin sets this to False if using a different load
# balancing solution for k8s services.

kube_proxy_deploy: True

# The operator needs to change the following if the hosts can not pull
# from the indicated registries, or if a different build of one of
# these images is desired.

# This defines the image (including tag) for the `hyperkube`
# image, which is used for all the standard kubernetes components if
# Mesos is not deployed.

k8s_hyperkube_image: gcr.io/google_containers/hyperkube-amd64:v1.3.6

# This defines the image (including tag) to use for `km`, which is
# used for all the standard kubernetes components if Mesos is
# deployed.

kube_image: openradiant/km:v1.3.6

kube_podmaster_image: gcr.io/google_containers/podmaster:1.1
kube_infra_image: gcr.io/google_containers/pause

# There is no reason for the operator to change any of the following.

k8s_etc_dir: /etc/kubernetes
k8s_cert_dir: "{{k8s_etc_dir}}/cert"
k8s_log_dir: /var/log/kubernetes
k8s_kubelet_manifests_dir: /etc/kubernetes/manifests
k8s_podmaster_manifests_dir: /srv/kubernetes/manifests
kube_mesos_offer_ttl: 10000m

# Kubernetes components will use cert /CN to authenticate
k8s_apiserver_cn: apiserver
k8s_scheduler_cn: scheduler
k8s_controller_manager_cn: controller-manager
k8s_kubelet_cn: kubelet
k8s_admin_cn: admin
k8s_user_cn: user
k8s_kube_proxy_cn: kube-proxy

k8s_service_ip_range: 10.10.10.0/24
k8s_apiserver_sport: 8443
k8s_apiserver_port: 8080
k8s_scheduler_port: 10251

pod_subnet: "172.17.0.0/16"


################################################################
# Etcd
################################################################

# The secondary variable that controls whether etcd is deployed.

etcd_deploy: False

etcd_image: quay.io/coreos/etcd
etcd_port: 4001
etcd_advertise_peer_port: 2380
etcd_listen_client_port: 2379


################################################################
# Remote ABAC
################################################################

rabac_image: openradiant/remoteabac
rabac_port: 8888
rabac_policy_file: abac-policy
rabac_cn: remoteabac


################################################################
# Zookeeper
################################################################

zookeeper_image: openradiant/zookeeper
zookeeper_port: 2181

################################################################
# Mesos
################################################################

# A boolean controlling whether Mesos is deployed

mesos_deploy: True

# The following variables identify the image to use for the Mesos
# master and worker components.

mesos_master_image: mesosphere/mesos-master:1.0.0-rc2
mesos_slave_image: mesosphere/mesos-slave:1.0.0-rc2

# There is no reason for the operator to change any of the following.

mesos_master_port: 5050
mesos_slave_port: 5050
use_mesos_roles: true
mesos_roles:
  swarm: 0.5
  kube: 0.5
mesos_slaves_resources: "cpus(swarm):2;cpus(kube):2;mem(swarm):4096;mem(kube):4096;disk(swarm):204800;disk(kube):204800;ports(swarm):[15000-25000];ports(kube):[55000-65000]"
mesos_allocation_interval: 500ms


################################################################
# Docker
################################################################

docker_package: docker-engine=1.12.1-0~trusty
docker_engine_port: 2375


################################################################
# Swarm
################################################################

# A boolean controlling whether the SwarmV1 master is deployed.

swarm_deploy: False

# The Swarm manager is run in a Docker container, and this variable
# identifies the image (with the usual default if tag is not
# specified) to use.

swarm_image: openradiant/swarm

# There is no reason for the operator to change any of the following.

swarm_manager_host_port: 4375
swarm_manager_port: 4375
swarm_manager_mesos_host_port: 3376
swarm_manager_mesos_port: 3375
swarm_mesos_refuse_seconds: 0.1s
swarm_mesos_tasktimeout: 10m
swarm_mesos_offertimeout: 10000m


###############################################################
# Networking
################################################################

# The version of Flannel to use

flannel_version: "0.5.5"


###############################################################
# Infrastructure docker registry (used to deploy radiant components)
################################################################

# The following two settings affect the way certain platform container
# images are accessed.  The list is: remoteabac, etc, lb, mesos, and
# ZooKeeper.  More/better doc is needed on what these mean.

# possible values: v1 or v2
infrastructure_docker_registry_type: v2
# use 'always' with v2 and 'missing' with v1
image_pull_type: always


###############################################################
# Api-proxy variables
################################################################

# The image name and tag to use for the proxy image.

proxy_image_name: containercafe/api-proxy

# A boolean that indicates whether the Ansible playbook that deploys
# the proxy should first build the image for the proxy; the
# alternative is to use a pre-built image of the configured name and
# tag.

build_proxy_image_locally: False

# There is no reason for the operator to change the following.

proxy_context: dockerize
